<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <name>Increment_Payment_Month</name>
        <label>Increment Payment Month</label>
        <locationX>453</locationX>
        <locationY>486</locationY>
        <assignmentItems>
            <assignToReference>PaymentMonth</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>IncrementCount</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Payment</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Populate_Payment_Month</name>
        <label>Populate Payment Month</label>
        <locationX>242</locationX>
        <locationY>506</locationY>
        <assignmentItems>
            <assignToReference>PaymentMonth</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetAttendance.PaymentMonthNum__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Payment</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Existing_Payment</name>
        <label>Existing Payment?</label>
        <locationX>444</locationX>
        <locationY>300</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ExistingPayment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PaymentId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>boolPaid</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RelatePayment</targetReference>
            </connector>
            <label>Existing Unpaid Payment</label>
        </rules>
        <rules>
            <name>New_Payment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PaymentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_School_Id</targetReference>
            </connector>
            <label>New Payment</label>
        </rules>
        <rules>
            <name>Existing_Paid_Payment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PaymentId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>boolPaid</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Increment_Payment_Month</targetReference>
            </connector>
            <label>Existing Paid Payment</label>
        </rules>
    </decisions>
    <formulas>
        <name>AttendanceYear</name>
        <dataType>String</dataType>
        <expression>TEXT(YEAR({!GetAttendance.SessionDate__c}))</expression>
    </formulas>
    <formulas>
        <name>CalcInvoicePeriodEnding</name>
        <dataType>Date</dataType>
        <expression>IF( MONTH( {!GetAttendance.SessionDate__c} ) = 12, 
DATE( YEAR( {!GetAttendance.SessionDate__c} ), 12, 31 ), 
DATE( YEAR( {!GetAttendance.SessionDate__c} ), MONTH( {!GetAttendance.SessionDate__c} ) + 1, 1) - 1)</expression>
    </formulas>
    <formulas>
        <name>calcScheduledDate</name>
        <dataType>Date</dataType>
        <expression>DATE(YEAR({!SessionDateAddMonth}),MONTH({!SessionDateAddMonth}),25)</expression>
    </formulas>
    <formulas>
        <name>SessionDateAddMonth</name>
        <dataType>Date</dataType>
        <expression>ADDMONTHS({!GetAttendance.SessionDate__c},{!IncrementCount})</expression>
    </formulas>
    <interviewLabel>Relate/Create Tutor Payments {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Relate/Create Tutor Payments</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Payment</name>
        <label>Create Payment</label>
        <locationX>871</locationX>
        <locationY>375</locationY>
        <assignRecordIdToReference>PaymentId</assignRecordIdToReference>
        <connector>
            <targetReference>RelatePayment</targetReference>
        </connector>
        <inputAssignments>
            <field>Cohort__c</field>
            <value>
                <elementReference>GetAttendance.CohortId__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Contact__c</field>
            <value>
                <elementReference>GetAttendance.TutorContactId__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Engagement__c</field>
            <value>
                <elementReference>GetAttendance.Engagement__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>InvoiceDate__c</field>
            <value>
                <elementReference>CalcInvoicePeriodEnding</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>PaymentOutgoingRecordType</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SchoolChargePerTutoringHour__c</field>
            <value>
                <elementReference>GetAttendance.SchoolChargePerTutoringHour__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>School__c</field>
            <value>
                <elementReference>SchoolId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>npe01__Opportunity__c</field>
            <value>
                <elementReference>GetAttendance.OpportunityId__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>npe01__Scheduled_Date__c</field>
            <value>
                <elementReference>calcScheduledDate</elementReference>
            </value>
        </inputAssignments>
        <object>npe01__OppPayment__c</object>
    </recordCreates>
    <recordLookups>
        <name>Get_Outgoing_Payment_RT</name>
        <label>Get Outgoing Payment RT</label>
        <locationX>175</locationX>
        <locationY>298</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Populate_Payment_Month</targetReference>
        </connector>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Outgoing</stringValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>npe01__OppPayment__c</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>PaymentOutgoingRecordType</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Payment</name>
        <label>Get Payment</label>
        <locationX>304</locationX>
        <locationY>298</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Existing_Payment</targetReference>
        </connector>
        <filters>
            <field>Engagement__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetAttendance.Engagement__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>PaymentMonthNum__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>PaymentMonth</elementReference>
            </value>
        </filters>
        <filters>
            <field>PaymentYear__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetAttendance.TutorPaymentYear__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>PaymentOutgoingRecordType</elementReference>
            </value>
        </filters>
        <filters>
            <field>npe01__Opportunity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetAttendance.OpportunityId__c</elementReference>
            </value>
        </filters>
        <object>npe01__OppPayment__c</object>
        <outputAssignments>
            <assignToReference>PaymentId</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>boolPaid</assignToReference>
            <field>npe01__Paid__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_School_Id</name>
        <label>Get School Id</label>
        <locationX>691</locationX>
        <locationY>375</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Payment</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetAttendance.CohortId__c</elementReference>
            </value>
        </filters>
        <object>Cohort__c</object>
        <outputAssignments>
            <assignToReference>SchoolId</assignToReference>
            <field>SchoolID__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>GetAttendance</name>
        <label>Get Attendance</label>
        <locationX>343</locationX>
        <locationY>186</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Outgoing_Payment_RT</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>TutorAttendanceRecordTypeId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Attendance__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetTutorRecordType</name>
        <label>GetTutorRecordType</label>
        <locationX>176</locationX>
        <locationY>178</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetAttendance</targetReference>
        </connector>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Tutor</stringValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Attendance__c</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>TutorAttendanceRecordTypeId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>RelatePayment</name>
        <label>Relate Payment</label>
        <locationX>730</locationX>
        <locationY>168</locationY>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetAttendance.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Payment__c</field>
            <value>
                <elementReference>PaymentId</elementReference>
            </value>
        </inputAssignments>
        <object>Attendance__c</object>
    </recordUpdates>
    <runInMode>DefaultMode</runInMode>
    <start>
        <locationX>49</locationX>
        <locationY>42</locationY>
        <connector>
            <targetReference>GetTutorRecordType</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>boolPaid</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>IncrementCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>1.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>PaymentId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>PaymentMonth</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>PaymentOutgoingRecordType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SchoolId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>TutorAttendanceRecordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>TutorContactId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
